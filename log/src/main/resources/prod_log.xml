<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

<!--    定义项目名字，便于在系统中分割出不同的项目的日志-->
<!--    <property name="PROJECT_NAME" value="项目名"/>-->
    <springProperty scope = "context" name = "LOG_NAME" source = "log.file.name"/>
    <springProperty scope = "context" name = "LOG_PATH" source = "log.file.path"/>
    <springProperty scope = "context" name = "LOG_PORT" source = "server.port"/>
    <springProperty scope = "context" name = "LOG_PACKAGE" source = "log.base-package"/>

    <!--彩色日志-->
    <!--彩色日志依赖的渲染类-->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!--彩色日志格式-->
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="FILE_LOG_PATTERN" value="%date %-5level [${HOSTNAME} %thread] %msg%n"/>

    <!-- 控制台输出 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level> <!-- 日志过滤级别 -->
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset> <!-- 输出编码 -->
        </encoder>
    </appender>

    <!-- 文件输出 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern><!-- 格式化输出 -->
            <charset>utf8</charset> <!-- 输出编码 -->
        </encoder>
        <file>./logs/info.log</file><!-- 文件存放路径 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH:-日志文件}/${LOG_PORT:-.}/${LOG_NAME:-.}/info/%d{yyyy-MM-dd}.info_%i.log.zip</fileNamePattern><!-- 每天归档 -->

            <!--按大小切分日志文件-->
            <!-- maxFileSize:这是活动文件的大小，默认值是10MB,本篇设置为1KB，只是为了演示 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory><!-- 日志存放周期（天） -->
            <totalSizeCap>1GB</totalSizeCap><!--总的大小-->
            <cleanHistoryOnStart>true</cleanHistoryOnStart><!--启动的时候清除历史记录-->
        </rollingPolicy>
    </appender>
    <!-- 错误日志文件输出 -->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--日志级别过滤器-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level> <!-- 日志过滤级别 -->
            <onMatch>ACCEPT</onMatch><!--匹配时的操作：接受（记录）-->
            <onMismatch>DENY</onMismatch><!--不匹配时的操作：拒绝（不记录）-->
        </filter>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>utf8</charset> <!-- 输出编码 -->
        </encoder>
        <file>./logs/error.log</file><!-- 文件存放路径 -->
        <!--日志滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH:-日志文件}/${LOG_PORT:-.}/${LOG_NAME:-.}/error/%d{yyyy-MM-dd}.error_%i.log.zip</fileNamePattern><!-- 每天归档 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>30</maxHistory><!-- 日志存放周期（天） -->
            <totalSizeCap>1GB</totalSizeCap><!--总的最大的大小-->
            <cleanHistoryOnStart>true</cleanHistoryOnStart><!--启动的时候清除历史记录-->
        </rollingPolicy>
    </appender>

    <!-- 基础日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>

<!--    name可以设置不同的包的输出策略-->
    <!--name需要修改-->
<!--    <logger name="com.example.testspringboot.controller" level="error" additivity="false">-->
    <logger name="${LOG_PACKAGE}" level="error" additivity="false">
        <appender-ref ref="ERROR_FILE" />
    </logger>


    <!--name需要修改-->
<!--    <logger name="com.example.testspringboot.controller" level="info" additivity="false">-->
    <logger name="${LOG_PACKAGE}" level="info" additivity="false">
        <appender-ref ref="FILE" />
    </logger>

</configuration>